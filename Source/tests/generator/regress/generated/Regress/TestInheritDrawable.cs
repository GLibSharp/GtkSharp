// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Regress {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class TestInheritDrawable {

		protected TestInheritDrawable (IntPtr raw) : base(raw) {}

		protected TestInheritDrawable() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct (new List<GLib.AbiField>{ 
					});

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr regress_test_inherit_drawable_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = regress_test_inherit_drawable_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern void regress_test_inherit_drawable_do_foo(IntPtr raw, int x);

		public void DoFoo(int x) {
			regress_test_inherit_drawable_do_foo(Handle, x);
		}

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern unsafe void regress_test_inherit_drawable_do_foo_maybe_throw(IntPtr raw, int x, out IntPtr error);

		public unsafe void DoFooMaybeThrow(int x) {
			IntPtr error = IntPtr.Zero;
			regress_test_inherit_drawable_do_foo_maybe_throw(Handle, x, out error);
			if (error != IntPtr.Zero) throw new GLib.GException (error);
		}

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern void regress_test_inherit_drawable_get_origin(IntPtr raw, out int x, out int y);

		public void GetOrigin(out int x, out int y) {
			regress_test_inherit_drawable_get_origin(Handle, out x, out y);
		}

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern void regress_test_inherit_drawable_get_size(IntPtr raw, out uint width, out uint height);

		public void GetSize(out uint width, out uint height) {
			regress_test_inherit_drawable_get_size(Handle, out width, out height);
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (new List<GLib.AbiField>{ 
					});

				return _abi_info;
			}
		}


		// End of the ABI representation.

#endregion
	}
}
