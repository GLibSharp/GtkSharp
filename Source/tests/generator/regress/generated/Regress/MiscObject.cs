// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Regress {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class MiscObject : GLib.Object {

		public MiscObject (IntPtr raw) : base(raw) {}

		protected MiscObject() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[DllImport ("regress-sharp-glue")]
		extern static uint regresssharp_regress_miscobject_get_parent_instance_offset ();

		static uint parent_instance_offset = regresssharp_regress_miscobject_get_parent_instance_offset ();
		public GLib.Object ParentInstance {
			get {
				unsafe {
					IntPtr* raw_ptr = (IntPtr*)(((byte*)Handle) + parent_instance_offset);
					return GLib.Object.GetObject ((*raw_ptr));
				}
			}
		}

		static GetOptionsNativeDelegate GetOptions_cb_delegate;
		static GetOptionsNativeDelegate GetOptionsVMCallback {
			get {
				if (GetOptions_cb_delegate == null)
					GetOptions_cb_delegate = new GetOptionsNativeDelegate (GetOptions_cb);
				return GetOptions_cb_delegate;
			}
		}

		static void OverrideGetOptions (GLib.GType gtype)
		{
			OverrideGetOptions (gtype, GetOptionsVMCallback);
		}

		static void OverrideGetOptions (GLib.GType gtype, GetOptionsNativeDelegate callback)
		{
			unsafe {
				IntPtr* raw_ptr = (IntPtr*)(((long) gtype.GetClassPtr()) + (long) class_abi.GetFieldOffset("get_options"));
				*raw_ptr = Marshal.GetFunctionPointerForDelegate((Delegate) callback);
			}
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr GetOptionsNativeDelegate (IntPtr inst);

		static IntPtr GetOptions_cb (IntPtr inst)
		{
			try {
				MiscObject __obj = GLib.Object.GetObject (inst, false) as MiscObject;
				string[] __result;
				__result = __obj.OnGetOptions ();
				return GLib.Marshaller.StringArrayToNullTermStrvPointer (__result);
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: above call does not return.
				throw e;
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(Regress.MiscObject), ConnectionMethod="OverrideGetOptions")]
		protected virtual string[] OnGetOptions ()
		{
			return InternalGetOptions ();
		}

		private string[] InternalGetOptions ()
		{
			GetOptionsNativeDelegate unmanaged = null;
			unsafe {
				IntPtr* raw_ptr = (IntPtr*)(((long) this.LookupGType().GetThresholdType().GetClassPtr()) + (long) class_abi.GetFieldOffset("get_options"));
				unmanaged = (GetOptionsNativeDelegate) Marshal.GetDelegateForFunctionPointer(*raw_ptr, typeof(GetOptionsNativeDelegate));
			}
			if (unmanaged == null) return null;

			IntPtr __result = unmanaged (this.Handle);
			return GLib.Marshaller.NullTermPtrToStringArray (__result, false);
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public new GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("get_options"
							, GLib.Object.class_abi.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // get_options
							, null
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr regress_misc_object_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = regress_misc_object_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr regress_misc_object_get_options(IntPtr raw);

		public string[] Options { 
			get {
				IntPtr raw_ret = regress_misc_object_get_options(Handle);
				string[] ret = GLib.Marshaller.NullTermPtrToStringArray (raw_ret, false);
				return ret;
			}
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public new GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (GLib.Object.abi_info.Fields);

				return _abi_info;
			}
		}


		// End of the ABI representation.

#endregion
	}
}
