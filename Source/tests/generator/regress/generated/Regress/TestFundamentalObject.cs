// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Regress {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

	#region Autogenerated code
	public partial class TestFundamentalObject : GLib.Opaque {

		[DllImport("regress-sharp-glue")]
		extern static uint regresssharp_regress_testfundamentalobject_get_refcount_offset();

		static uint refcount_offset = regresssharp_regress_testfundamentalobject_get_refcount_offset();
		public int Refcount {
			get {
				unsafe {
					int* raw_ptr = (int*)(((byte*)Handle) + refcount_offset);
					return (*raw_ptr);
				}
			}
		}

		[DllImport("regress-sharp-glue")]
		extern static uint regresssharp_regress_testfundamentalobject_get_flags_offset();

		static uint flags_offset = regresssharp_regress_testfundamentalobject_get_flags_offset();
		public uint Flags {
			get {
				unsafe {
					uint* raw_ptr = (uint*)(((byte*)Handle) + flags_offset);
					return (*raw_ptr);
				}
			}
		}

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr regress_test_fundamental_object_get_type();

		public static GLib.GType GType {
			get {
				IntPtr raw_ret = regress_test_fundamental_object_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr regress_test_value_get_fundamental_object(IntPtr value);

		public TestFundamentalObject(GLib.Value value) {
			IntPtr native_value = GLib.Marshaller.StructureToPtrAlloc(value);
			Raw = regress_test_value_get_fundamental_object(native_value);
			Marshal.FreeHGlobal(native_value);
		}

		public TestFundamentalObject(IntPtr raw) : base(raw) { }

		protected TestFundamentalObject() : base() { }

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr regress_test_fundamental_object_ref(IntPtr raw);

		protected override void Ref(IntPtr raw) {
			if (!Owned) {
				regress_test_fundamental_object_ref(raw);
				Owned = true;
			}
		}

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern void regress_test_fundamental_object_unref(IntPtr raw);

		protected override void Unref(IntPtr raw) {
			if (Owned) {
				regress_test_fundamental_object_unref(raw);
				Owned = false;
			}
		}

		protected override Action<IntPtr> DisposeUnmanagedFunc {
			get {
				return regress_test_fundamental_object_unref;
			}
		}

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern void regress_test_value_set_fundamental_object(ref GLib.Value val, IntPtr obj);

		public void SetGValue(ref GLib.Value val) {
			regress_test_value_set_fundamental_object(ref val, Handle);
		}

		#endregion
	}
}