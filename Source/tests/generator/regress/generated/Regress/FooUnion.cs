// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Regress {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

	#region Autogenerated code
	[StructLayout(LayoutKind.Explicit)]
	public partial struct FooUnion : IEquatable<FooUnion> {

		[FieldOffset(0)]
		public int RegressFoo;

		public static Regress.FooUnion Zero = new Regress.FooUnion();

		public static Regress.FooUnion New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Regress.FooUnion.Zero;
			return (Regress.FooUnion)Marshal.PtrToStructure(raw, typeof(Regress.FooUnion));
		}

		public bool Equals(FooUnion other) {
			return true && RegressFoo.Equals(other.RegressFoo);
		}

		public override bool Equals(object other) {
			return other is FooUnion && Equals((FooUnion)other);
		}

		public override int GetHashCode() {
			return this.GetType().FullName.GetHashCode() ^ RegressFoo.GetHashCode();
		}

		#endregion
	}
}