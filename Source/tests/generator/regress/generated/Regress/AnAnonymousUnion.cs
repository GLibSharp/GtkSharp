// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Regress {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct AnAnonymousUnion : IEquatable<AnAnonymousUnion> {

		public int X;

		public static Regress.AnAnonymousUnion Zero = new Regress.AnAnonymousUnion ();

		public static Regress.AnAnonymousUnion New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Regress.AnAnonymousUnion.Zero;
			return (Regress.AnAnonymousUnion) Marshal.PtrToStructure (raw, typeof (Regress.AnAnonymousUnion));
		}

		public bool Equals (AnAnonymousUnion other)
		{
			return true && X.Equals (other.X);
		}

		public override bool Equals (object other)
		{
			return other is AnAnonymousUnion && Equals ((AnAnonymousUnion) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ X.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
