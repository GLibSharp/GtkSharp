// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Regress {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct LikeXklConfigItem : IEquatable<LikeXklConfigItem> {

		[MarshalAs (UnmanagedType.ByValArray, SizeConst=32)]
		public string[] Name;

		public static Regress.LikeXklConfigItem Zero = new Regress.LikeXklConfigItem ();

		public static Regress.LikeXklConfigItem New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Regress.LikeXklConfigItem.Zero;
			return (Regress.LikeXklConfigItem) Marshal.PtrToStructure (raw, typeof (Regress.LikeXklConfigItem));
		}

		public bool Equals (LikeXklConfigItem other)
		{
			return true && Name.Equals (other.Name);
		}

		public override bool Equals (object other)
		{
			return other is LikeXklConfigItem && Equals ((LikeXklConfigItem) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Name.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
