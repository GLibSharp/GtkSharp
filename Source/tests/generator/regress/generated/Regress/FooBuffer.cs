// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Regress {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

	#region Autogenerated code
	public partial class FooBuffer : Regress.FooObject {

		public FooBuffer(IntPtr raw) : base(raw) { }

		protected FooBuffer() : base(IntPtr.Zero) {
			CreateNativeObject(new string[0], new GLib.Value[0]);
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public new GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct(Regress.FooObject.class_abi.Fields);

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr regress_foo_buffer_get_type();

		public static new GLib.GType GType {
			get {
				IntPtr raw_ret = regress_foo_buffer_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern void regress_foo_buffer_some_method(IntPtr raw);

		public void SomeMethod() {
			regress_foo_buffer_some_method(Handle);
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public new GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct(Regress.FooObject.abi_info.Fields);

				return _abi_info;
			}
		}


		// End of the ABI representation.

		#endregion
	}
}