// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Regress {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

	#region Autogenerated code
	[StructLayout(LayoutKind.Explicit)]
	public partial struct FooBUnion : IEquatable<FooBUnion> {

		[FieldOffset(0)]
		public int Type;
		[FieldOffset(0)]
		public double V;
		[FieldOffset(0)]
		private IntPtr _rect;

		public Regress.FooBRect rect {
			get { return Regress.FooBRect.New(_rect); }
		}

		public static Regress.FooBUnion Zero = new Regress.FooBUnion();

		public static Regress.FooBUnion New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Regress.FooBUnion.Zero;
			return (Regress.FooBUnion)Marshal.PtrToStructure(raw, typeof(Regress.FooBUnion));
		}

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr regress_foo_bunion_new();

		public static FooBUnion New() {
			FooBUnion result = FooBUnion.New(regress_foo_bunion_new());
			return result;
		}

		[DllImport("regress-1.0", CallingConvention = CallingConvention.Cdecl)]
		static extern int regress_foo_bunion_get_contained_type(IntPtr raw);

		public int ContainedType {
			get {
				IntPtr this_as_native = System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Runtime.InteropServices.Marshal.SizeOf(this));
				System.Runtime.InteropServices.Marshal.StructureToPtr(this, this_as_native, false);
				int raw_ret = regress_foo_bunion_get_contained_type(this_as_native);
				int ret = raw_ret;
				ReadNative(this_as_native, ref this);
				System.Runtime.InteropServices.Marshal.FreeHGlobal(this_as_native);
				return ret;
			}
		}

		static void ReadNative(IntPtr native, ref Regress.FooBUnion target) {
			target = New(native);
		}

		public bool Equals(FooBUnion other) {
			return true && Type.Equals(other.Type) && V.Equals(other.V) && rect.Equals(other.rect);
		}

		public override bool Equals(object other) {
			return other is FooBUnion && Equals((FooBUnion)other);
		}

		public override int GetHashCode() {
			return this.GetType().FullName.GetHashCode() ^ Type.GetHashCode() ^ V.GetHashCode() ^ rect.GetHashCode();
		}

		#endregion
	}
}