// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Regress {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

	#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct AnnotationStruct : IEquatable<AnnotationStruct> {

		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 10)]
		public Regress.AnnotationObject[] Objects;

		public static Regress.AnnotationStruct Zero = new Regress.AnnotationStruct();

		public static Regress.AnnotationStruct New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Regress.AnnotationStruct.Zero;
			return (Regress.AnnotationStruct)Marshal.PtrToStructure(raw, typeof(Regress.AnnotationStruct));
		}

		public bool Equals(AnnotationStruct other) {
			return true && Objects.Equals(other.Objects);
		}

		public override bool Equals(object other) {
			return other is AnnotationStruct && Equals((AnnotationStruct)other);
		}

		public override int GetHashCode() {
			return this.GetType().FullName.GetHashCode() ^ Objects.GetHashCode();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
		#endregion
	}
}