<Type Name="NodeView" FullName="Gtk.NodeView">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class NodeView : Gtk.TreeView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeView extends Gtk.TreeView" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 71 EB 6C 55 75 52 9C BF 72 44 F7 A6 EA 05 62 84 F9 EA E0 3B CF F2 CC 13 2C 9C 49 0A B3 09 EA B0 B5 6B CE 44 9D F5 03 D9 C0 A8 1E 52 05 85 CD BE 70 E2 FB 90 43 4B AC 04 FA 62 22 A8 00 98 B7 A1 A7 B3 AF 99 1A 41 23 24 BB 43 25 F6 B8 65 BB 64 EB F6 D1 C2 06 D5 73 2D DF BC 70 A7 38 9E E5 3E 0C 24 6E 32 79 74 1A D0 05 03 E4 98 42 E1 9B F3 7B 19 8B 40 21 26 CB 36 89 C2 EA 64 96 A4 7C B4]</AssemblyPublicKey>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>Gtk.TreeView</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>Tree and List view.</summary>
    <remarks />
    <since version="Gtk# 2.4" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Public Constructor.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeView (Gtk.NodeStore store);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Gtk.NodeStore store) cil managed" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="store" Type="Gtk.NodeStore" />
      </Parameters>
      <Docs>
        <param name="store">a <see cref="T:Gtk.NodeStore" /></param>
        <summary>Constructs a new view for a given <see cref="T:Gtk.NodeStore" />.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ActivateRow">
      <MemberSignature Language="C#" Value="public void ActivateRow (Gtk.ITreeNode node, Gtk.TreeViewColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ActivateRow(class Gtk.ITreeNode node, class Gtk.TreeViewColumn column) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Gtk.ITreeNode" />
        <Parameter Name="column" Type="Gtk.TreeViewColumn" />
      </Parameters>
      <Docs>
        <param name="node">an object of type <see cref="T:Gtk.ITreeNode" /></param>
        <param name="column">an object of type <see cref="T:Gtk.TreeViewColumn" /></param>
        <summary>Collapses a row (hides its child rows, if they exist).</summary>
        <remarks />
        <since version="Gtk# 2.14" />
      </Docs>
    </Member>
    <Member MemberName="AppendColumn">
      <MemberSignature Language="C#" Value="public Gtk.TreeViewColumn AppendColumn (string title, Gtk.CellRenderer cell, Gtk.NodeCellDataFunc cell_data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Gtk.TreeViewColumn AppendColumn(string title, class Gtk.CellRenderer cell, class Gtk.NodeCellDataFunc cell_data) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.TreeViewColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="cell" Type="Gtk.CellRenderer" />
        <Parameter Name="cell_data" Type="Gtk.NodeCellDataFunc" />
      </Parameters>
      <Docs>
        <param name="title">a <see cref="T:System.String" /></param>
        <param name="cell">a <see cref="T:Gtk.CellRenderer" /></param>
        <param name="cell_data">a <see cref="T:Gtk.NodeCellDataFunc" /></param>
        <summary>Adds a column to the view using a data callback delegate.</summary>
        <returns>a <see cref="T:Gtk.TreeViewColumn" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CollapseRow">
      <MemberSignature Language="C#" Value="public bool CollapseRow (Gtk.ITreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CollapseRow(class Gtk.ITreeNode node) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Gtk.ITreeNode" />
      </Parameters>
      <Docs>
        <param name="node">an object of type <see cref="T:Gtk.ITreeNode" /> identifying the row to be activated</param>
        <summary>Activates the cell determined by <paramref name="node" /> and <paramref name="column" />.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Gtk# 2.14" />
      </Docs>
    </Member>
    <Member MemberName="CreateRowDragIcon">
      <MemberSignature Language="C#" Value="public Cairo.Surface CreateRowDragIcon (Gtk.ITreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Cairo.Surface CreateRowDragIcon(class Gtk.ITreeNode node) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Cairo.Surface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Gtk.ITreeNode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="ExpandRow">
      <MemberSignature Language="C#" Value="public void ExpandRow (Gtk.ITreeNode node, bool open_all);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandRow(class Gtk.ITreeNode node, bool open_all) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Gtk.ITreeNode" />
        <Parameter Name="open_all" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">an object of type <see cref="T:Gtk.ITreeNode" /> identifying the row to expand</param>
        <param name="open_all">a <see cref="T:System.Boolean" /> to determine whether to recursively expand or just expand immediate children</param>
        <summary>Expands the row at <paramref name="node" /> so its children are visible.</summary>
        <remarks />
        <since version="Gtk# 2.14" />
      </Docs>
    </Member>
    <Member MemberName="ExpandToNode">
      <MemberSignature Language="C#" Value="public void ExpandToNode (Gtk.ITreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandToNode(class Gtk.ITreeNode node) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Gtk.ITreeNode" />
      </Parameters>
      <Docs>
        <param name="node">an object of type <see cref="T:Gtk.ITreeNode" /> identifying the row to expand</param>
        <summary>Expands the row at <paramref name="node" />. This will also expand all parent rows of <paramref name="node" /> as necessary.</summary>
        <remarks />
        <since version="Gtk# 2.14" />
      </Docs>
    </Member>
    <Member MemberName="GetBackgroundArea">
      <MemberSignature Language="C#" Value="public Gdk.Rectangle GetBackgroundArea (Gtk.ITreeNode node, Gtk.TreeViewColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Gdk.Rectangle GetBackgroundArea(class Gtk.ITreeNode node, class Gtk.TreeViewColumn column) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Gtk.ITreeNode" />
        <Parameter Name="column" Type="Gtk.TreeViewColumn" />
      </Parameters>
      <Docs>
        <param name="node">an object of type <see cref="T:Gtk.ITreeNode" /> identifying the row</param>
        <param name="column">an object of type <see cref="T:Gtk.TreeViewColumn" /> identifying the column</param>
        <summary>Fills the bounding rectangle in tree window coordinates for the cell at the row specified by <paramref name="node" /> and the column specified by <paramref name="column" />.</summary>
        <returns>To be added.</returns>
        <remarks>See the remark in  <see cref="T:Gtk.TreeView" />.
        </remarks>
        <since version="Gtk# 2.14" />
      </Docs>
    </Member>
    <Member MemberName="GetCellArea">
      <MemberSignature Language="C#" Value="public Gdk.Rectangle GetCellArea (Gtk.ITreeNode node, Gtk.TreeViewColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Gdk.Rectangle GetCellArea(class Gtk.ITreeNode node, class Gtk.TreeViewColumn column) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Gtk.ITreeNode" />
        <Parameter Name="column" Type="Gtk.TreeViewColumn" />
      </Parameters>
      <Docs>
        <param name="node">an object of type <see cref="T:Gtk.ITreeNode" /> identifying the row</param>
        <param name="column">an object of type <see cref="T:Gtk.TreeViewColumn" /> identifying the column</param>
        <summary>Fills the bounding rectangle in tree window coordinates for the cell at the row specified by <paramref name="node" /> and the column specified by <paramref name="column" />.</summary>
        <returns>To be added.</returns>
        <remarks>See the remark in  <see cref="T:Gtk.TreeView" />.
        </remarks>
        <since version="Gtk# 2.14" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeAtPos">
      <MemberSignature Language="C#" Value="public Gtk.ITreeNode GetNodeAtPos (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Gtk.ITreeNode GetNodeAtPos(int32 x, int32 y) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ITreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">an <see cref="T:System.Int32" /> X coordinate</param>
        <param name="y">an <see cref="T:System.Int32" /> Y coordinate</param>
        <summary>Finds the ITreeNode at the point (x, y), relative to widget coordinates.</summary>
        <returns>an object of type <see cref="T:Gtk.ITreeNode" /></returns>
        <remarks>It is primarily for things like popup menus. This function is only meaningful if TreeView is realized.  This function can return null.</remarks>
        <since version="Gtk# 2.14" />
      </Docs>
    </Member>
    <Member MemberName="GetRowExpanded">
      <MemberSignature Language="C#" Value="public bool GetRowExpanded (Gtk.ITreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetRowExpanded(class Gtk.ITreeNode node) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Gtk.ITreeNode" />
      </Parameters>
      <Docs>
        <param name="node">an object of type  <see cref="T:Gtk.ITreeNode" /></param>
        <summary>Returns <see langword="true" /> if the node pointed to by <paramref name="node" /> is expanded.</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>
        </remarks>
        <since version="Gtk# 2.14" />
      </Docs>
    </Member>
    <Member MemberName="GetVisibleRange">
      <MemberSignature Language="C#" Value="public bool GetVisibleRange (out Gtk.ITreeNode startNode, out Gtk.ITreeNode endNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetVisibleRange(class Gtk.ITreeNode startNode, class Gtk.ITreeNode endNode) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startNode" Type="Gtk.ITreeNode&amp;" RefType="out" />
        <Parameter Name="endNode" Type="Gtk.ITreeNode&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startNode">To be added.</param>
        <param name="endNode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="NodeSelection">
      <MemberSignature Language="C#" Value="public Gtk.NodeSelection NodeSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gtk.NodeSelection NodeSelection" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.NodeSelection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Used to obtain and manipulate the currently selected node(s).</summary>
        <value>an object of type <see cref="T:Gtk.NodeSelection" /></value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="NodeStore">
      <MemberSignature Language="C#" Value="public Gtk.NodeStore NodeStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gtk.NodeStore NodeStore" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.NodeStore</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The store containing the view's data.</summary>
        <value>an object of type <see cref="T:Gtk.NodeStore" /></value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ScrollToCell">
      <MemberSignature Language="C#" Value="public void ScrollToCell (Gtk.ITreeNode node, Gtk.TreeViewColumn column, bool use_align, float row_align, float col_align);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToCell(class Gtk.ITreeNode node, class Gtk.TreeViewColumn column, bool use_align, float32 row_align, float32 col_align) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Gtk.ITreeNode" />
        <Parameter Name="column" Type="Gtk.TreeViewColumn" />
        <Parameter Name="use_align" Type="System.Boolean" />
        <Parameter Name="row_align" Type="System.Single" />
        <Parameter Name="col_align" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="node">an object of type <see cref="T:Gtk.ITreeNode" /> identifying a row to scroll to</param>
        <param name="column">an object of type <see cref="T:Gtk.TreeViewColumn" />identifying a column to scroll to</param>
        <param name="use_align">a <see cref="T:System.Boolean" /></param>
        <param name="row_align">a <see cref="T:System.Single" /></param>
        <param name="col_align">a <see cref="T:System.Single" /></param>
        <summary>Moves the alignments of the <see cref="T:Gtk.TreeView" /> to the position specified by <paramref name="column" /> and <paramref name="node" />.</summary>
        <remarks>
          <para>
            If <paramref name="column" /> is <see langword="null" />, then no horizontal scrolling occurs. Likewise, if <paramref name="node" /> is <see langword="null" /> no vertical scrolling occurs. At a minimum, one of <paramref name="column" /> or <paramref name="null" /> need to be non-<see langword="null" />. <paramref name="row_align" /> determines where the row is placed, and <paramref name="col_align" /> determines where the column is placed. Both are expected to be between 0.0 and 1.0. 0.0 means left/top alignment, 1.0 means right/bottom alignment, 0.5 means center.
          </para>
          <para>
            If <paramref name="use_align" /> is <see langword="false" />, then the alignment arguments are ignored, and the tree does the minimum amount of work to scroll the cell onto the screen. This means that the cell will be scrolled to the edge closest to its current position. If the cell is currently visible on the screen, nothing is done.
          </para>
          <para>
            This function only works if the model is set, and <paramref name="node" /> is a valid row on the model. If the model changes before the <see cref="T:Gtk.NodeView" /> is realized, the centered path will be modified to reflect this change.
          </para>
        </remarks>
        <since version="Gtk# 2.14" />
      </Docs>
    </Member>
    <Member MemberName="SetTooltipCell">
      <MemberSignature Language="C#" Value="public void SetTooltipCell (Gtk.Tooltip tooltip, Gtk.ITreeNode node, Gtk.TreeViewColumn column, Gtk.CellRenderer renderer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTooltipCell(class Gtk.Tooltip tooltip, class Gtk.ITreeNode node, class Gtk.TreeViewColumn column, class Gtk.CellRenderer renderer) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tooltip" Type="Gtk.Tooltip" />
        <Parameter Name="node" Type="Gtk.ITreeNode" />
        <Parameter Name="column" Type="Gtk.TreeViewColumn" />
        <Parameter Name="renderer" Type="Gtk.CellRenderer" />
      </Parameters>
      <Docs>
        <param name="tooltip">an object of type <see cref="T:Gtk.Tooltip" /></param>
        <param name="node">an object of type <see cref="T:Gtk.ITreeNode" /></param>
        <param name="column">an object of type <see cref="T:Gtk.TreeViewColumn" /></param>
        <param name="renderer">an object of type <see cref="T:Gtk.CellRenderer" /></param>
        <summary>Sets the tip area of <paramref name="tooltip" /> to the area which cell occupies in the item pointed to by node. See also <see cref="SetTipArea" />..</summary>
        <remarks>
        </remarks>
        <since version="Gtk# 2.14" />
      </Docs>
    </Member>
  </Members>
</Type>
