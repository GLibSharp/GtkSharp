<Type Name="CellRendererCombo" FullName="Gtk.CellRendererCombo">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class CellRendererCombo : Gtk.CellRendererText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CellRendererCombo extends Gtk.CellRendererText" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 71 EB 6C 55 75 52 9C BF 72 44 F7 A6 EA 05 62 84 F9 EA E0 3B CF F2 CC 13 2C 9C 49 0A B3 09 EA B0 B5 6B CE 44 9D F5 03 D9 C0 A8 1E 52 05 85 CD BE 70 E2 FB 90 43 4B AC 04 FA 62 22 A8 00 98 B7 A1 A7 B3 AF 99 1A 41 23 24 BB 43 25 F6 B8 65 BB 64 EB F6 D1 C2 06 D5 73 2D DF BC 70 A7 38 9E E5 3E 0C 24 6E 32 79 74 1A D0 05 03 E4 98 42 E1 9B F3 7B 19 8B 40 21 26 CB 36 89 C2 EA 64 96 A4 7C B4]</AssemblyPublicKey>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>Gtk.CellRendererText</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>Renders a combobox in a cell</summary>
    <remarks>
      <see cref="T:Gtk.CellRendererCombo" /> renders text in a cell like <see cref="T:Gtk.CellRendererText" /> from which it is derived. But while <see cref="T:Gtk.CellRendererText" /> offers a simple entry to edit the text, <see cref="T:Gtk.CellRendererCombo" /> offers a <see cref="T: Gtk.ComboBox" /> or <see cref="T:Gtk.ComboBoxEntry" /> widget to edit the text. The values to display in the combo box are taken from the tree model specified in the model property.

The combo cell renderer takes care of adding a text cell renderer to the combo box and sets it to display the column specified by its text-column property. Further cell renderers can be added in a handler for the editing-started signal. </remarks>
    <since version="Gtk# 2.6" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CellRendererCombo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Default constructor</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CellRendererCombo (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int raw) cil managed" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">a <see cref="T:System.IntPtr" /></param>
        <summary>Internal constructor</summary>
        <remarks>This is not typically used by C# code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event Gtk.ChangedHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class Gtk.ChangedHandler Changed" />
      <MemberType>Event</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("changed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.ChangedHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype GLib.GType GType" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gtk.CellRendererCombo" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEntry">
      <MemberSignature Language="C#" Value="public bool HasEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEntry" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("has-entry")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether to use an entry.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>If <see langword="true" />, the cell renderer will include an entry and allow to enter values other than the ones in the popup list.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Gtk.ITreeModel Model { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gtk.ITreeModel Model" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("model")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.ITreeModel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Holds a tree model containing the possible values for the combo box.</summary>
        <value>a <see cref="T:Gtk.TreeModel" /></value>
        <remarks>Use the <see cref="P:Gtk.CellRendererCombo.TextColumn" /> property to specify the column holding the values.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChanged (string p0, Gtk.TreeIter p1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanged(string p0, valuetype Gtk.TreeIter p1) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideChanged", Type=typeof(Gtk.CellRendererCombo))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
        <Parameter Name="p1" Type="Gtk.TreeIter" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <param name="p1">To be added.</param>
        <summary>Default handler for the <see cref="M:Gtk.CellRendererCombo.Changed" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.CellRendererCombo.Changed" /> event.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="TextColumn">
      <MemberSignature Language="C#" Value="public int TextColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextColumn" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("text-column")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Specifies the model column which holds the possible values for the combo box.</summary>
        <value>a <see cref="T:System.Int32" /></value>
        <remarks>
          <block subset="none" type="note">
            <para>this refers to the model specified in the model property, not the model backing the tree view to which this cell renderer is attached.
  </para>
          </block>
          <see cref="T:Gtk.CellRendererCombo" /> automatically adds a text cell renderer for this column to its combo box.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
