<Type Name="CellRenderer" FullName="Gtk.CellRenderer">
  <TypeSignature Language="C#" Maintainer="John Luke" Value="public class CellRenderer : GLib.InitiallyUnowned" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CellRenderer extends GLib.InitiallyUnowned" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>GLib.InitiallyUnowned</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary>An object for rendering a single cell on a <see cref="T:Gdk.Drawable" /></summary>
    <remarks>
      <para>
	    The <see cref="T:Gtk.CellRenderer" /> is a base class of a set of objects used for rendering a cell to a <see cref="T:Gdk.Drawable" />.
		These objects are used primarily by the <see cref="T:Gtk.TreeView" /> widget, though they are not tied to them in any specific way.
		It is worth noting that <see cref="T:Gtk.CellRenderer" /> is not a <see cref="T:Gtk.Widget" /> and cannot be treated as such.
	  </para>
      <para>
	    The primary use of a <see cref="T:Gtk.CellRenderer" /> is for drawing a certain graphical elements on a <see cref="T:Gdk.Drawable" />.
		Typically, one <see cref="T:Gtk.CellRenderer" /> is used to draw many cells on the screen.
		To this extent, it is not expected that a <see cref="T:Gtk.CellRenderer" /> keep any permanent state around.
		Instead, any state is set just prior to use.
		Then, the cell is measured using <see cref="M:Gtk.CellRendererGetSize(Gtk.Widget,Gdk.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32)" />.
		Finally, the cell is rendered in the correct location using <see cref="M:Gtk.CellRenderer.Render(Gdk.Window,Gtk.Widget,Gdk.Rectangle,Gdk.Rectangle,Gdk.Rectangle,Gtk.CellRendererState)" />.
	  </para>
      <para>
	    There are a number of rules that must be followed when writing a new <see cref="T:Gtk.CellRenderer" />.
		First and foremost, it is important that a certain set of properties will always yield a <see cref="T:Gtk.CellRenderer" /> of the same size, barring a <see cref="T:Gtk.Style" /> change.
		The <see cref="T:Gtk.CellRenderer" /> also has a number of generic properties that are expected to be honored by all children.
	  </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CellRenderer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Protected constructor.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CellRenderer (IntPtr raw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int raw) cil managed" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">Pointer to the C object.</param>
        <summary>Internal constructor</summary>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public bool Activate (Gdk.Event evnt, Gtk.Widget widget, string path, Gdk.Rectangle background_area, Gdk.Rectangle cell_area, Gtk.CellRendererState flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Activate(class Gdk.Event evnt, class Gtk.Widget widget, string path, valuetype Gdk.Rectangle background_area, valuetype Gdk.Rectangle cell_area, valuetype Gtk.CellRendererState flags) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evnt" Type="Gdk.Event" />
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="background_area" Type="Gdk.Rectangle" />
        <Parameter Name="cell_area" Type="Gdk.Rectangle" />
        <Parameter Name="flags" Type="Gtk.CellRendererState" />
      </Parameters>
      <Docs>
        <param name="evnt">an object of type <see cref="T:Gdk.Event" /></param>
        <param name="widget">an object of type <see cref="T:Gtk.Widget" /></param>
        <param name="path">an object of type <see cref="T:System.String" /></param>
        <param name="background_area">an object of type <see cref="T:Gdk.Rectangle" /></param>
        <param name="cell_area">an object of type <see cref="T:Gdk.Rectangle" /></param>
        <param name="flags">an object of type <see cref="T:Gtk.CellRendererState" /></param>
        <summary>Passes an activate event to the <see cref="T:Gtk.CellRenderer" /> for possible processing.</summary>
        <returns>an object of type <see cref="T:System.Boolean" /></returns>
        <remarks>Some <see cref="T:Gtk.CellRenderer" />s may use events; for example, <see cref="T:Gtk.CellRendererToggle" /> toggles when it gets a mouse click.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellBackground">
      <MemberSignature Language="C#" Value="public string CellBackground { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CellBackground" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("cell-background")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Cell background color as a <see cref="T:System.String" />.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CellBackgroundGdk">
      <MemberSignature Language="C#" Value="public Gdk.Color CellBackgroundGdk { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Gdk.Color CellBackgroundGdk" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("cell-background-gdk")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gdk.Color</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Cell background color as a <see cref="T:Gdk.Color" />.</summary>
        <value>a <see cref="T:Gdk.Color" /></value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CellBackgroundRgba">
      <MemberSignature Language="C#" Value="public Gdk.RGBA CellBackgroundRgba { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Gdk.RGBA CellBackgroundRgba" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("cell-background-rgba")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gdk.RGBA</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="Editing">
      <MemberSignature Language="C#" Value="public bool Editing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Editing" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("editing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="EditingCanceled">
      <MemberSignature Language="C#" Value="public event EventHandler EditingCanceled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EditingCanceled" />
      <MemberType>Event</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("editing-canceled")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
	  This event is raised when the user cancels the process of 
	  editing a cell.  
	</summary>
        <remarks>
	  For example, an editable cell renderer could be written to cancel
	  editing when the user presses Escape.
	</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="EditingStarted">
      <MemberSignature Language="C#" Value="public event Gtk.EditingStartedHandler EditingStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class Gtk.EditingStartedHandler EditingStarted" />
      <MemberType>Event</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("editing-started")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.EditingStartedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This signal gets emitted when a cell starts to be edited.</summary>
        <remarks>
          <para>
	    The intended use of this signal is to do special setup on editable cell, e.g. adding a <see cref="T:Gtk.EntryCompletion" /> or setting up additional columns in a <see cref="T:Gtk.ComboBox" />.
	  </para>
          <para>
	    Note that GTK# doesn't guarantee that cell renderers will continue to use the same kind of widget for editing in future releases, therefore you should check the type of the cell before doing any specifi setup.
	  </para>
        </remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="GetAlignedArea">
      <MemberSignature Language="C#" Value="public void GetAlignedArea (Gtk.Widget widget, Gtk.CellRendererState flags, Gdk.Rectangle cell_area, Gdk.Rectangle aligned_area);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAlignedArea(class Gtk.Widget widget, valuetype Gtk.CellRendererState flags, valuetype Gdk.Rectangle cell_area, valuetype Gdk.Rectangle aligned_area) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="flags" Type="Gtk.CellRendererState" />
        <Parameter Name="cell_area" Type="Gdk.Rectangle" />
        <Parameter Name="aligned_area" Type="Gdk.Rectangle" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="cell_area">To be added.</param>
        <param name="aligned_area">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="GetAlignment">
      <MemberSignature Language="C#" Value="public void GetAlignment (out float xalign, out float yalign);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAlignment(float32 xalign, float32 yalign) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xalign" Type="System.Single&amp;" RefType="out" />
        <Parameter Name="yalign" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="xalign">To be added.</param>
        <param name="yalign">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="GetFixedSize">
      <MemberSignature Language="C#" Value="public void GetFixedSize (out int width, out int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetFixedSize(int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="height" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="width">Location to fill in with the fixed width of the widget, or <see langword="null" />.</param>
        <param name="height">Location to fill in with the fixed height of the widget, or <see langword="null" />.</param>
        <summary>Fills in <paramref name="width" /> and <paramref name="height" /> with the appropriate size.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetPadding">
      <MemberSignature Language="C#" Value="public void GetPadding (out int xpad, out int ypad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetPadding(int32 xpad, int32 ypad) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpad" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="ypad" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="xpad">To be added.</param>
        <param name="ypad">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredHeight">
      <MemberSignature Language="C#" Value="public void GetPreferredHeight (Gtk.Widget widget, out int minimum_size, out int natural_size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetPreferredHeight(class Gtk.Widget widget, int32 minimum_size, int32 natural_size) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="minimum_size" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="natural_size" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="minimum_size">To be added.</param>
        <param name="natural_size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredHeightForWidth">
      <MemberSignature Language="C#" Value="public void GetPreferredHeightForWidth (Gtk.Widget widget, int width, out int minimum_height, out int natural_height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetPreferredHeightForWidth(class Gtk.Widget widget, int32 width, int32 minimum_height, int32 natural_height) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="minimum_height" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="natural_height" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="width">To be added.</param>
        <param name="minimum_height">To be added.</param>
        <param name="natural_height">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="public void GetPreferredSize (Gtk.Widget widget, Gtk.Requisition minimum_size, Gtk.Requisition natural_size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetPreferredSize(class Gtk.Widget widget, valuetype Gtk.Requisition minimum_size, valuetype Gtk.Requisition natural_size) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="minimum_size" Type="Gtk.Requisition" />
        <Parameter Name="natural_size" Type="Gtk.Requisition" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="minimum_size">To be added.</param>
        <param name="natural_size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredWidth">
      <MemberSignature Language="C#" Value="public void GetPreferredWidth (Gtk.Widget widget, out int minimum_size, out int natural_size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetPreferredWidth(class Gtk.Widget widget, int32 minimum_size, int32 natural_size) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="minimum_size" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="natural_size" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="minimum_size">To be added.</param>
        <param name="natural_size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredWidthForHeight">
      <MemberSignature Language="C#" Value="public void GetPreferredWidthForHeight (Gtk.Widget widget, int height, out int minimum_width, out int natural_width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetPreferredWidthForHeight(class Gtk.Widget widget, int32 height, int32 minimum_width, int32 natural_width) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="minimum_width" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="natural_width" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="height">To be added.</param>
        <param name="minimum_width">To be added.</param>
        <param name="natural_width">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="GetState">
      <MemberSignature Language="C#" Value="public Gtk.StateFlags GetState (Gtk.Widget widget, Gtk.CellRendererState cell_state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Gtk.StateFlags GetState(class Gtk.Widget widget, valuetype Gtk.CellRendererState cell_state) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.StateFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="cell_state" Type="Gtk.CellRendererState" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="cell_state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype GLib.GType GType" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gtk.CellRenderer" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("height")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The fixed height.</summary>
        <value>an object of type <see cref="T:System.Int32" /></value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsActivatable">
      <MemberSignature Language="C#" Value="public bool IsActivatable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActivatable" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("is-expanded")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Row is an expander row, and is expanded.</summary>
        <value>an object of type <see cref="T:System.Boolean" /></value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsExpander">
      <MemberSignature Language="C#" Value="public bool IsExpander { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpander" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("is-expander")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Row has children.</summary>
        <value>an object of type <see cref="T:System.Boolean" /></value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public Gtk.CellRendererMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Gtk.CellRendererMode Mode" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("mode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.CellRendererMode</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Editable mode of the CellRenderer.</summary>
        <value>an object of type <see cref="T:Gtk.CellRendererMode" /></value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="OnActivate">
      <MemberSignature Language="C#" Value="protected virtual bool OnActivate (Gdk.Event evnt, Gtk.Widget widget, string path, Gdk.Rectangle background_area, Gdk.Rectangle cell_area, Gtk.CellRendererState flags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnActivate(class Gdk.Event evnt, class Gtk.Widget widget, string path, valuetype Gdk.Rectangle background_area, valuetype Gdk.Rectangle cell_area, valuetype Gtk.CellRendererState flags) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideActivate", Type=typeof(Gtk.CellRenderer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evnt" Type="Gdk.Event" />
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="background_area" Type="Gdk.Rectangle" />
        <Parameter Name="cell_area" Type="Gdk.Rectangle" />
        <Parameter Name="flags" Type="Gtk.CellRendererState" />
      </Parameters>
      <Docs>
        <param name="evnt">To be added.</param>
        <param name="widget">To be added.</param>
        <param name="path">To be added.</param>
        <param name="background_area">To be added.</param>
        <param name="cell_area">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="OnEditingCanceled">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingCanceled ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingCanceled() cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideEditingCanceled", Type=typeof(Gtk.CellRenderer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default handler for the <see cref="M:Gtk.CellRenderer.EditingCanceled" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.CellRenderer.EditingCanceled" /> event.</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="OnEditingStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingStarted (Gtk.ICellEditable editable, string path);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingStarted(class Gtk.ICellEditable editable, string path) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideEditingStarted", Type=typeof(Gtk.CellRenderer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editable" Type="Gtk.ICellEditable" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="editable">To be added.</param>
        <param name="path">To be added.</param>
        <summary>Default handler for the <see cref="M:Gtk.CellRenderer.EditingStarted" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.CellRenderer.EditingStarted" /> event.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="OnGetAlignedArea">
      <MemberSignature Language="C#" Value="protected virtual void OnGetAlignedArea (Gtk.Widget widget, Gtk.CellRendererState flags, Gdk.Rectangle cell_area, Gdk.Rectangle aligned_area);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGetAlignedArea(class Gtk.Widget widget, valuetype Gtk.CellRendererState flags, valuetype Gdk.Rectangle cell_area, valuetype Gdk.Rectangle aligned_area) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideGetAlignedArea", Type=typeof(Gtk.CellRenderer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="flags" Type="Gtk.CellRendererState" />
        <Parameter Name="cell_area" Type="Gdk.Rectangle" />
        <Parameter Name="aligned_area" Type="Gdk.Rectangle" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="cell_area">To be added.</param>
        <param name="aligned_area">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="OnGetPreferredHeight">
      <MemberSignature Language="C#" Value="protected virtual void OnGetPreferredHeight (Gtk.Widget widget, out int minimum_size, out int natural_size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGetPreferredHeight(class Gtk.Widget widget, int32 minimum_size, int32 natural_size) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideGetPreferredHeight", Type=typeof(Gtk.CellRenderer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="minimum_size" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="natural_size" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="minimum_size">To be added.</param>
        <param name="natural_size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="OnGetPreferredHeightForWidth">
      <MemberSignature Language="C#" Value="protected virtual void OnGetPreferredHeightForWidth (Gtk.Widget widget, int width, out int minimum_height, out int natural_height);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGetPreferredHeightForWidth(class Gtk.Widget widget, int32 width, int32 minimum_height, int32 natural_height) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideGetPreferredHeightForWidth", Type=typeof(Gtk.CellRenderer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="minimum_height" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="natural_height" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="width">To be added.</param>
        <param name="minimum_height">To be added.</param>
        <param name="natural_height">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="OnGetPreferredWidth">
      <MemberSignature Language="C#" Value="protected virtual void OnGetPreferredWidth (Gtk.Widget widget, out int minimum_size, out int natural_size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGetPreferredWidth(class Gtk.Widget widget, int32 minimum_size, int32 natural_size) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideGetPreferredWidth", Type=typeof(Gtk.CellRenderer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="minimum_size" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="natural_size" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="minimum_size">To be added.</param>
        <param name="natural_size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="OnGetPreferredWidthForHeight">
      <MemberSignature Language="C#" Value="protected virtual void OnGetPreferredWidthForHeight (Gtk.Widget widget, int height, out int minimum_width, out int natural_width);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGetPreferredWidthForHeight(class Gtk.Widget widget, int32 height, int32 minimum_width, int32 natural_width) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideGetPreferredWidthForHeight", Type=typeof(Gtk.CellRenderer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="minimum_width" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="natural_width" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="height">To be added.</param>
        <param name="minimum_width">To be added.</param>
        <param name="natural_width">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="OnGetRequestMode">
      <MemberSignature Language="C#" Value="protected virtual Gtk.SizeRequestMode OnGetRequestMode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Gtk.SizeRequestMode OnGetRequestMode() cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideGetRequestMode", Type=typeof(Gtk.CellRenderer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.SizeRequestMode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="OnGetSize">
      <MemberSignature Language="C#" Value="protected virtual void OnGetSize (Gtk.Widget widget, ref Gdk.Rectangle cell_area, out int x_offset, out int y_offset, out int width, out int height);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGetSize(class Gtk.Widget widget, valuetype Gdk.Rectangle cell_area, int32 x_offset, int32 y_offset, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideOnGetSize", Type=typeof(Gtk.CellRenderer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="cell_area" Type="Gdk.Rectangle&amp;" RefType="ref" />
        <Parameter Name="x_offset" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="y_offset" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="width" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="height" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="cell_area">To be added.</param>
        <param name="x_offset">To be added.</param>
        <param name="y_offset">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="OnRender">
      <MemberSignature Language="C#" Value="protected virtual void OnRender (Cairo.Context cr, Gtk.Widget widget, Gdk.Rectangle background_area, Gdk.Rectangle cell_area, Gtk.CellRendererState flags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRender(class Cairo.Context cr, class Gtk.Widget widget, valuetype Gdk.Rectangle background_area, valuetype Gdk.Rectangle cell_area, valuetype Gtk.CellRendererState flags) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideRender", Type=typeof(Gtk.CellRenderer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr" Type="Cairo.Context" />
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="background_area" Type="Gdk.Rectangle" />
        <Parameter Name="cell_area" Type="Gdk.Rectangle" />
        <Parameter Name="flags" Type="Gtk.CellRendererState" />
      </Parameters>
      <Docs>
        <param name="cr">To be added.</param>
        <param name="widget">To be added.</param>
        <param name="background_area">To be added.</param>
        <param name="cell_area">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="OnStartEditing">
      <MemberSignature Language="C#" Value="protected virtual Gtk.ICellEditable OnStartEditing (Gdk.Event evnt, Gtk.Widget widget, string path, Gdk.Rectangle background_area, Gdk.Rectangle cell_area, Gtk.CellRendererState flags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Gtk.ICellEditable OnStartEditing(class Gdk.Event evnt, class Gtk.Widget widget, string path, valuetype Gdk.Rectangle background_area, valuetype Gdk.Rectangle cell_area, valuetype Gtk.CellRendererState flags) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.DefaultSignalHandler(ConnectionMethod="OverrideStartEditing", Type=typeof(Gtk.CellRenderer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Gtk.ICellEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evnt" Type="Gdk.Event" />
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="background_area" Type="Gdk.Rectangle" />
        <Parameter Name="cell_area" Type="Gdk.Rectangle" />
        <Parameter Name="flags" Type="Gtk.CellRendererState" />
      </Parameters>
      <Docs>
        <param name="evnt">To be added.</param>
        <param name="widget">To be added.</param>
        <param name="path">To be added.</param>
        <param name="background_area">To be added.</param>
        <param name="cell_area">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (Cairo.Context cr, Gtk.Widget widget, Gdk.Rectangle background_area, Gdk.Rectangle cell_area, Gtk.CellRendererState flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class Cairo.Context cr, class Gtk.Widget widget, valuetype Gdk.Rectangle background_area, valuetype Gdk.Rectangle cell_area, valuetype Gtk.CellRendererState flags) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr" Type="Cairo.Context" />
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="background_area" Type="Gdk.Rectangle" />
        <Parameter Name="cell_area" Type="Gdk.Rectangle" />
        <Parameter Name="flags" Type="Gtk.CellRendererState" />
      </Parameters>
      <Docs>
        <param name="cr">To be added.</param>
        <param name="widget">To be added.</param>
        <param name="background_area">To be added.</param>
        <param name="cell_area">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (Cairo.Context context, Gtk.Widget widget, Gdk.Rectangle background_area, Gdk.Rectangle cell_area, Gdk.Rectangle expose_area, Gtk.CellRendererState flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class Cairo.Context context, class Gtk.Widget widget, valuetype Gdk.Rectangle background_area, valuetype Gdk.Rectangle cell_area, valuetype Gdk.Rectangle expose_area, valuetype Gtk.CellRendererState flags) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Cairo.Context" />
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="background_area" Type="Gdk.Rectangle" />
        <Parameter Name="cell_area" Type="Gdk.Rectangle" />
        <Parameter Name="expose_area" Type="Gdk.Rectangle" />
        <Parameter Name="flags" Type="Gtk.CellRendererState" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="widget">To be added.</param>
        <param name="background_area">To be added.</param>
        <param name="cell_area">To be added.</param>
        <param name="expose_area">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="RequestMode">
      <MemberSignature Language="C#" Value="public Gtk.SizeRequestMode RequestMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Gtk.SizeRequestMode RequestMode" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.SizeRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="Sensitive">
      <MemberSignature Language="C#" Value="public bool Sensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sensitive" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("sensitive")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Display the cell sensitive.</summary>
        <value>A <see cref="T:System.Boolean" />.</value>
        <remarks>The default value is <see langword="true" />.</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="SetAlignment">
      <MemberSignature Language="C#" Value="public void SetAlignment (float xalign, float yalign);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAlignment(float32 xalign, float32 yalign) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xalign" Type="System.Single" />
        <Parameter Name="yalign" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="xalign">To be added.</param>
        <param name="yalign">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="SetFixedSize">
      <MemberSignature Language="C#" Value="public void SetFixedSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFixedSize(int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">an object of type <see cref="T:System.Int32" /></param>
        <param name="height">an object of type <see cref="T:System.Int32" /></param>
        <summary>Sets the renderer size to be explicit, independent of the properties set.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetPadding">
      <MemberSignature Language="C#" Value="public void SetPadding (int xpad, int ypad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPadding(int32 xpad, int32 ypad) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpad" Type="System.Int32" />
        <Parameter Name="ypad" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xpad">To be added.</param>
        <param name="ypad">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="StartEditing">
      <MemberSignature Language="C#" Value="public Gtk.ICellEditable StartEditing (Gtk.Widget widget, Gdk.Event evnt, string path, Gdk.Rectangle background_area, Gdk.Rectangle cell_area, Gtk.CellRendererState flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Gtk.ICellEditable StartEditing(class Gtk.Widget widget, class Gdk.Event evnt, string path, valuetype Gdk.Rectangle background_area, valuetype Gdk.Rectangle cell_area, valuetype Gtk.CellRendererState flags) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ICellEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="evnt" Type="Gdk.Event" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="background_area" Type="Gdk.Rectangle" />
        <Parameter Name="cell_area" Type="Gdk.Rectangle" />
        <Parameter Name="flags" Type="Gtk.CellRendererState" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="evnt">To be added.</param>
        <param name="path">To be added.</param>
        <param name="background_area">To be added.</param>
        <param name="cell_area">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="StopEditing">
      <MemberSignature Language="C#" Value="public void StopEditing (bool canceled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopEditing(bool canceled) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canceled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="canceled">a <see cref="T:System.Boolean" /></param>
        <summary>Informs the cell renderer that the editing is stopped.</summary>
        <remarks>If <paramref name="canceled" /> is <see langword="true" />, the cell renderer will emit the <see cref="F:Gtk.CellRenderer.EditingCanceled" /> event. This method should be called by cell renderer implementations in response to the <see cref="F:Gtk.CellEditable.EditingDone" /> event of <see cref="T:Gtk.CellEditable" />.</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("visible")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Display the cell.</summary>
        <value>an object of type <see cref="T:System.Boolean" /></value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("width")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The fixed width.</summary>
        <value>an object of type <see cref="T:System.Int32" /></value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Xalign">
      <MemberSignature Language="C#" Value="public float Xalign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Xalign" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("xalign")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The x-align.</summary>
        <value>an object of type <see cref="T:System.Single" /></value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Xpad">
      <MemberSignature Language="C#" Value="public uint Xpad { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Xpad" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("xpad")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The xpad.</summary>
        <value>an object of type <see cref="T:System.UInt32" /></value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Yalign">
      <MemberSignature Language="C#" Value="public float Yalign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Yalign" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("yalign")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The y-align.</summary>
        <value>an object of type <see cref="T:System.Single" /></value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Ypad">
      <MemberSignature Language="C#" Value="public uint Ypad { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Ypad" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("ypad")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The ypad.</summary>
        <value>an object of type <see cref="T:System.UInt32" /></value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
