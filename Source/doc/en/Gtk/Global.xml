<Type Name="Global" FullName="Gtk.Global">
  <TypeSignature Language="C#" Value="public class Global" Maintainer="auto" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Global extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Global API elements for <see cref="N:Gtk" /></summary>
    <remarks>This class contains all the methods which are not directly attributable to a specific type.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Global ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Do not use.</summary>
        <remarks>There are no instance members for this class.  This constructor will be marked Obsolete and possibly removed in future versions.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternativeDialogButtonOrder">
      <MemberSignature Language="C#" Value="public static bool AlternativeDialogButtonOrder (Gdk.Screen screen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AlternativeDialogButtonOrder(class Gdk.Screen screen) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screen" Type="Gdk.Screen" />
      </Parameters>
      <Docs>
        <param name="screen">a <see cref="T:Gdk.Screen" /></param>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="BinaryAge">
      <MemberSignature Language="C#" Value="public static uint BinaryAge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property unsigned int32 BinaryAge" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="BindingsActivate">
      <MemberSignature Language="C#" Value="public static bool BindingsActivate (GLib.Object objekt, uint keyval, Gdk.ModifierType modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool BindingsActivate(class GLib.Object objekt, unsigned int32 keyval, valuetype Gdk.ModifierType modifiers) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objekt" Type="GLib.Object" />
        <Parameter Name="keyval" Type="System.UInt32" />
        <Parameter Name="modifiers" Type="Gdk.ModifierType" />
      </Parameters>
      <Docs>
        <param name="objekt">To be added.</param>
        <param name="keyval">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="CheckVersion">
      <MemberSignature Language="C#" Value="public static string CheckVersion (uint required_major, uint required_minor, uint required_micro);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CheckVersion(unsigned int32 required_major, unsigned int32 required_minor, unsigned int32 required_micro) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="required_major" Type="System.UInt32" />
        <Parameter Name="required_minor" Type="System.UInt32" />
        <Parameter Name="required_micro" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="required_major">a <see cref="T:System.UInt32" /></param>
        <param name="required_minor">a <see cref="T:System.UInt32" /></param>
        <param name="required_micro">a <see cref="T:System.UInt32" /></param>
        <summary>Check if a version is compatible with the currently loaded Gtk library.</summary>
        <returns>
          <see langword="null" /> if the version is supported, or an error string describing the mismatch.</returns>
        <remarks>This is typically only used by modules which want to check if they are compatible with the currently loaded version of Gtk+.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentEvent">
      <MemberSignature Language="C#" Value="public static Gdk.Event CurrentEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Gdk.Event CurrentEvent" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Event</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtains a copy of the event currently being processed by Gtk#.</summary>
        <value>a <see cref="T:Gdk.Event" /></value>
        <remarks>For example, if you get a <see cref="E:Gtk.Button.Clicked" /> event from <see cref="T:Gtk.Button" />, the current event will be the <see cref="T:Gdk.EventButton" /> that triggered the <see cref="E:Gtk.Button.Clicked" /> signal.  If there is no current event, the function returns <see langword="null" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentEventDevice">
      <MemberSignature Language="C#" Value="public static Gdk.Device CurrentEventDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Gdk.Device CurrentEventDevice" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Device</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="CurrentEventTime">
      <MemberSignature Language="C#" Value="public static uint CurrentEventTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property unsigned int32 CurrentEventTime" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:System.UInt32" /> representing the unix time of the current event.</summary>
        <value>Returns the unix time for the current event.</value>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugFlags">
      <MemberSignature Language="C#" Value="public static uint DebugFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property unsigned int32 DebugFlags" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="DefaultLanguage">
      <MemberSignature Language="C#" Value="public static Pango.Language DefaultLanguage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Pango.Language DefaultLanguage" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Pango.Language</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current default language for this application.</summary>
        <value>a <see cref="T:Pango.Language" /></value>
        <remarks>This value can change during the life of a program, and is based on the current locale.  It contains information such as the text direction of the current language.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableSetlocale">
      <MemberSignature Language="C#" Value="public static void DisableSetlocale ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableSetlocale() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disables automatic user locale usage.</summary>
        <remarks>Only use this if you want to set a specific locale for your program other than the default user locale, or if you want to set different values for different locale categories.  Most applications will not need to use this.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DistributeNaturalAllocation">
      <MemberSignature Language="C#" Value="public static int DistributeNaturalAllocation (int extra_space, uint n_requested_sizes, Gtk.RequestedSize sizes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DistributeNaturalAllocation(int32 extra_space, unsigned int32 n_requested_sizes, valuetype Gtk.RequestedSize sizes) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extra_space" Type="System.Int32" />
        <Parameter Name="n_requested_sizes" Type="System.UInt32" />
        <Parameter Name="sizes" Type="Gtk.RequestedSize" />
      </Parameters>
      <Docs>
        <param name="extra_space">To be added.</param>
        <param name="n_requested_sizes">To be added.</param>
        <param name="sizes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="DrawInsertionCursor">
      <MemberSignature Language="C#" Value="public static void DrawInsertionCursor (Gtk.Widget widget, Cairo.Context cr, Gdk.Rectangle location, bool is_primary, Gtk.TextDirection direction, bool draw_arrow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawInsertionCursor(class Gtk.Widget widget, class Cairo.Context cr, valuetype Gdk.Rectangle location, bool is_primary, valuetype Gtk.TextDirection direction, bool draw_arrow) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="cr" Type="Cairo.Context" />
        <Parameter Name="location" Type="Gdk.Rectangle" />
        <Parameter Name="is_primary" Type="System.Boolean" />
        <Parameter Name="direction" Type="Gtk.TextDirection" />
        <Parameter Name="draw_arrow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="widget">To be added.</param>
        <param name="cr">To be added.</param>
        <param name="location">To be added.</param>
        <param name="is_primary">To be added.</param>
        <param name="direction">To be added.</param>
        <param name="draw_arrow">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="EventsPending">
      <MemberSignature Language="C#" Value="public static bool EventsPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EventsPending" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Checks if any events are pending.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>This can be used to update the GUI and invoke timeouts etc. while doing some time intensive computation.

<example><code lang="C#">
	/* computation going on */
...
        while (Gtk.Global.EventsPending)
	{
	  Gtk.Application.RunIteration ();
	}
...
	/* computation continued */
  </code></example></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentEventState">
      <MemberSignature Language="C#" Value="public static bool GetCurrentEventState (out Gdk.ModifierType state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetCurrentEventState(valuetype Gdk.ModifierType state) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Gdk.ModifierType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="state">a <see cref="T:Gdk.ModifierType&amp;" /> to store the state in if one exists.</param>
        <summary>Gets the state field of the current event.</summary>
        <returns>
          <see langword="true" /> if there is a current <see cref="T:Gdk.Event" /> and it has a state field, otherwise <see langword="false" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetEventWidget">
      <MemberSignature Language="C#" Value="public static Gtk.Widget GetEventWidget (Gdk.Event evnt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Gtk.Widget GetEventWidget(class Gdk.Event evnt) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evnt" Type="Gdk.Event" />
      </Parameters>
      <Docs>
        <param name="evnt">a <see cref="T:Gdk.Event" /></param>
        <summary>Gets the widget associated with an event.</summary>
        <returns>the <see cref="T:Gtk.Widget" /> that originally received <paramref name="evnt" />, or <see langword="null" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InterfaceAge">
      <MemberSignature Language="C#" Value="public static uint InterfaceAge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property unsigned int32 InterfaceAge" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="MajorVersion">
      <MemberSignature Language="C#" Value="public static uint MajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property unsigned int32 MajorVersion" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="MicroVersion">
      <MemberSignature Language="C#" Value="public static uint MicroVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property unsigned int32 MicroVersion" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="MinorVersion">
      <MemberSignature Language="C#" Value="public static uint MinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property unsigned int32 MinorVersion" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="PaintSpinner">
      <MemberSignature Language="C#" Value="public static void PaintSpinner (Gtk.Style style, Cairo.Context cr, Gtk.StateType state_type, Gtk.Widget widget, string detail, uint step, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PaintSpinner(class Gtk.Style style, class Cairo.Context cr, valuetype Gtk.StateType state_type, class Gtk.Widget widget, string detail, unsigned int32 step, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="Gtk.Style" />
        <Parameter Name="cr" Type="Cairo.Context" />
        <Parameter Name="state_type" Type="Gtk.StateType" />
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="detail" Type="System.String" />
        <Parameter Name="step" Type="System.UInt32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="style">To be added.</param>
        <param name="cr">To be added.</param>
        <param name="state_type">To be added.</param>
        <param name="widget">To be added.</param>
        <param name="detail">To be added.</param>
        <param name="step">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="ParseArgs">
      <MemberSignature Language="C#" Value="public static bool ParseArgs (out int argc, string argv);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ParseArgs(int32 argc, string argv) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argc" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="argv" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="argc">a <see cref="T:System.Int32" /></param>
        <param name="argv">a <see cref="T:System.String" /></param>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="PropagateEvent">
      <MemberSignature Language="C#" Value="public static void PropagateEvent (Gtk.Widget widget, Gdk.Event evnt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PropagateEvent(class Gtk.Widget widget, class Gdk.Event evnt) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="evnt" Type="Gdk.Event" />
      </Parameters>
      <Docs>
        <param name="widget">
          <see cref="T:Gtk.Widget" /> to propagate event to.</param>
        <param name="evnt">
          <see cref="T:Gdk.Event" /> to propagate.</param>
        <summary>Propagate an event from one widget to another.</summary>
        <remarks>This function should be rarely used, look into event handler overriding instead.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RgbToHsv">
      <MemberSignature Language="C#" Value="public static void RgbToHsv (double r, double g, double b, out double h, out double s, out double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RgbToHsv(float64 r, float64 g, float64 b, float64 h, float64 s, float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Double" />
        <Parameter Name="g" Type="System.Double" />
        <Parameter Name="b" Type="System.Double" />
        <Parameter Name="h" Type="System.Double&amp;" RefType="out" />
        <Parameter Name="s" Type="System.Double&amp;" RefType="out" />
        <Parameter Name="v" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="r">the red component of the color as a <see cref="T:System.Double" /></param>
        <param name="g">the green component of the color as a <see cref="T:System.Double" /></param>
        <param name="b">the blue component of the color as a <see cref="T:System.Double" /></param>
        <param name="h">the resulting hue of the color as a <see cref="T:System.Double&amp;" /></param>
        <param name="s">the resulting saturation of the color as a <see cref="T:System.Double&amp;" /></param>
        <param name="v">the resulting value of the color as a <see cref="T:System.Double&amp;" /></param>
        <summary>Converts a Red/Green/Blue color value to a Hue/Saturation/Value color value.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ShowUri">
      <MemberSignature Language="C#" Value="public static bool ShowUri (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShowUri(string uri) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="ShowUri">
      <MemberSignature Language="C#" Value="public static bool ShowUri (Gdk.Screen screen, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShowUri(class Gdk.Screen screen, string uri) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screen" Type="Gdk.Screen" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="screen">To be added.</param>
        <param name="uri">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="ShowUri">
      <MemberSignature Language="C#" Value="public static bool ShowUri (Gdk.Screen screen, string uri, uint timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShowUri(class Gdk.Screen screen, string uri, unsigned int32 timestamp) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screen" Type="Gdk.Screen" />
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="timestamp" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="screen">To be added.</param>
        <param name="uri">To be added.</param>
        <param name="timestamp">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
  </Members>
</Type>
