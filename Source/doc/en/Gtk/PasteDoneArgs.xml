<Type Name="PasteDoneArgs" FullName="Gtk.PasteDoneArgs">
  <TypeSignature Language="C#" Value="public class PasteDoneArgs : GLib.SignalArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PasteDoneArgs extends GLib.SignalArgs" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>GLib.SignalArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Event data.</summary>
    <remarks>
      <para>The <see cref="M:Gtk.TextBuffer.PasteDone" /> event invokes <see cref="T:Gtk.PasteDoneHandler" /> delegates which pass event data via this class.</para>
    </remarks>
    <since version="Gtk# 3.0" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasteDoneArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>Public Constructor.</summary>
        <remarks>Create a new <see cref="T:Gtk.PasteDoneArgs" /> instance with this constructor if you need to invoke a <see cref="T:Gtk.PasteDoneHandler" /> delegate.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
    <Member MemberName="Clipboard">
      <MemberSignature Language="C#" Value="public Gtk.Clipboard Clipboard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Gtk.Clipboard Clipboard" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Clipboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version="Gtk# 3.0" />
      </Docs>
    </Member>
  </Members>
</Type>
