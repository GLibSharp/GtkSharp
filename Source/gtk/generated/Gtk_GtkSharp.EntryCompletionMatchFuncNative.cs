// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GtkSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate bool EntryCompletionMatchFuncNative(IntPtr completion, IntPtr key, IntPtr iter, IntPtr user_data);

	internal class EntryCompletionMatchFuncInvoker {

		EntryCompletionMatchFuncNative native_cb;
		IntPtr __data;
		GLib.DestroyNotify __notify;

		~EntryCompletionMatchFuncInvoker ()
		{
			if (__notify == null)
				return;
			__notify (__data);
		}

		internal EntryCompletionMatchFuncInvoker (EntryCompletionMatchFuncNative native_cb) : this (native_cb, IntPtr.Zero, null) {}

		internal EntryCompletionMatchFuncInvoker (EntryCompletionMatchFuncNative native_cb, IntPtr data) : this (native_cb, data, null) {}

		internal EntryCompletionMatchFuncInvoker (EntryCompletionMatchFuncNative native_cb, IntPtr data, GLib.DestroyNotify notify)
		{
			this.native_cb = native_cb;
			__data = data;
			__notify = notify;
		}

		internal Gtk.EntryCompletionMatchFunc Handler {
			get {
				return new Gtk.EntryCompletionMatchFunc(InvokeNative);
			}
		}

		bool InvokeNative (Gtk.EntryCompletion completion, string key, Gtk.TreeIter iter)
		{
			IntPtr native_key = GLib.Marshaller.StringToPtrGStrdup (key);
			IntPtr native_iter = GLib.Marshaller.StructureToPtrAlloc (iter);
			bool __result = native_cb (completion == null ? IntPtr.Zero : completion.Handle, native_key, native_iter, __data);
			GLib.Marshaller.Free (native_key);
			Marshal.FreeHGlobal (native_iter);
			return __result;
		}
	}

	internal class EntryCompletionMatchFuncWrapper {

		public bool NativeCallback (IntPtr completion, IntPtr key, IntPtr iter, IntPtr user_data)
		{
			try {
				bool __ret = managed (GLib.Object.GetObject(completion) as Gtk.EntryCompletion, GLib.Marshaller.Utf8PtrToString (key), Gtk.TreeIter.New (iter));
				if (release_on_call)
					gch.Free ();
				return __ret;
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
				return false;
			}
		}

		bool release_on_call = false;
		GCHandle gch;

		public void PersistUntilCalled ()
		{
			release_on_call = true;
			gch = GCHandle.Alloc (this);
		}

		internal EntryCompletionMatchFuncNative NativeDelegate;
		Gtk.EntryCompletionMatchFunc managed;

		public EntryCompletionMatchFuncWrapper (Gtk.EntryCompletionMatchFunc managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new EntryCompletionMatchFuncNative (NativeCallback);
		}

		public static Gtk.EntryCompletionMatchFunc GetManagedDelegate (EntryCompletionMatchFuncNative native)
		{
			if (native == null)
				return null;
			EntryCompletionMatchFuncWrapper wrapper = (EntryCompletionMatchFuncWrapper) native.Target;
			if (wrapper == null)
				return null;
			return wrapper.managed;
		}
	}
#endregion
}
