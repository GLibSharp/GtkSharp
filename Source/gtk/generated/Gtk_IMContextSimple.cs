// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class IMContextSimple : Gtk.IMContext {

		public IMContextSimple (IntPtr raw) : base(raw) {}

		[DllImport("libgtk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gtk_im_context_simple_new();

		public IMContextSimple () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (IMContextSimple)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			Raw = gtk_im_context_simple_new();
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public new GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct (Gtk.IMContext.class_abi.Fields);

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[DllImport("libgtk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gtk_im_context_simple_add_compose_file(IntPtr raw, IntPtr compose_file);

		public void AddComposeFile(string compose_file) {
			IntPtr native_compose_file = GLib.Marshaller.StringToPtrGStrdup (compose_file);
			gtk_im_context_simple_add_compose_file(Handle, native_compose_file);
			GLib.Marshaller.Free (native_compose_file);
		}

		[DllImport("libgtk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gtk_im_context_simple_add_table(IntPtr raw, out ushort data, int max_seq_len, int n_seqs);

		public ushort AddTable(int max_seq_len, int n_seqs) {
			ushort data;
			gtk_im_context_simple_add_table(Handle, out data, max_seq_len, n_seqs);
			return data;
		}

		[DllImport("libgtk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gtk_im_context_simple_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gtk_im_context_simple_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public new GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("priv"
							, Gtk.IMContext.abi_info.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // priv
							, null
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _abi_info;
			}
		}


		// End of the ABI representation.

#endregion
	}
}
