// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class TrayIcon : Gtk.Plug {

		public TrayIcon (IntPtr raw) : base(raw) {}

		protected TrayIcon() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[GLib.Property ("orientation")]
		public Gtk.Orientation Orientation {
			get {
				GLib.Value val = GetProperty ("orientation");
				Gtk.Orientation ret = (Gtk.Orientation) (Enum) val;
				val.Dispose ();
				return ret;
			}
		}

		[GLib.Property ("fg-color")]
		public Gdk.RGBA FgColor {
			get {
				GLib.Value val = GetProperty ("fg-color");
				Gdk.RGBA ret = (Gdk.RGBA) val;
				val.Dispose ();
				return ret;
			}
		}

		[GLib.Property ("error-color")]
		public Gdk.RGBA ErrorColor {
			get {
				GLib.Value val = GetProperty ("error-color");
				Gdk.RGBA ret = (Gdk.RGBA) val;
				val.Dispose ();
				return ret;
			}
		}

		[GLib.Property ("warning-color")]
		public Gdk.RGBA WarningColor {
			get {
				GLib.Value val = GetProperty ("warning-color");
				Gdk.RGBA ret = (Gdk.RGBA) val;
				val.Dispose ();
				return ret;
			}
		}

		[GLib.Property ("success-color")]
		public Gdk.RGBA SuccessColor {
			get {
				GLib.Value val = GetProperty ("success-color");
				Gdk.RGBA ret = (Gdk.RGBA) val;
				val.Dispose ();
				return ret;
			}
		}

		[GLib.Property ("padding")]
		public int Padding {
			get {
				GLib.Value val = GetProperty ("padding");
				int ret = (int) val;
				val.Dispose ();
				return ret;
			}
		}

		[GLib.Property ("icon-size")]
		public int IconSize {
			get {
				GLib.Value val = GetProperty ("icon-size");
				int ret = (int) val;
				val.Dispose ();
				return ret;
			}
		}

		[DllImport("libgtk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gtk_tray_icon_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gtk_tray_icon_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

#endregion
	}
}
