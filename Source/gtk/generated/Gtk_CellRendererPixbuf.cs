// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class CellRendererPixbuf : Gtk.CellRenderer {

		public CellRendererPixbuf (IntPtr raw) : base(raw) {}

		[DllImport("libgtk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gtk_cell_renderer_pixbuf_new();

		public CellRendererPixbuf () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (CellRendererPixbuf)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			Raw = gtk_cell_renderer_pixbuf_new();
		}

		[GLib.Property ("pixbuf")]
		public Gdk.Pixbuf Pixbuf {
			get {
				GLib.Value val = GetProperty ("pixbuf");
				Gdk.Pixbuf ret = (Gdk.Pixbuf) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("pixbuf", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("pixbuf-expander-open")]
		public Gdk.Pixbuf PixbufExpanderOpen {
			get {
				GLib.Value val = GetProperty ("pixbuf-expander-open");
				Gdk.Pixbuf ret = (Gdk.Pixbuf) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("pixbuf-expander-open", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("pixbuf-expander-closed")]
		public Gdk.Pixbuf PixbufExpanderClosed {
			get {
				GLib.Value val = GetProperty ("pixbuf-expander-closed");
				Gdk.Pixbuf ret = (Gdk.Pixbuf) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("pixbuf-expander-closed", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("stock-id")]
		public string StockId {
			get {
				GLib.Value val = GetProperty ("stock-id");
				string ret = (string) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("stock-id", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("stock-size")]
		public uint StockSize {
			get {
				GLib.Value val = GetProperty ("stock-size");
				uint ret = (uint) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("stock-size", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("stock-detail")]
		public string StockDetail {
			get {
				GLib.Value val = GetProperty ("stock-detail");
				string ret = (string) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("stock-detail", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("icon-name")]
		public string IconName {
			get {
				GLib.Value val = GetProperty ("icon-name");
				string ret = (string) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("icon-name", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("follow-state")]
		public bool FollowState {
			get {
				GLib.Value val = GetProperty ("follow-state");
				bool ret = (bool) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("follow-state", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("gicon")]
		public GLib.IIcon Icon {
			get {
				GLib.Value val = GetProperty ("gicon");
				GLib.IIcon ret = GLib.IconAdapter.GetObject ((GLib.Object) val);
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("gicon", val);
				val.Dispose ();
			}
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _class_abi = null;
		static public new GLib.AbiStruct class_abi {
			get {
				if (_class_abi == null)
					_class_abi = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("_gtk_reserved1"
							, Gtk.CellRenderer.class_abi.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // _gtk_reserved1
							, null
							, "_gtk_reserved2"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("_gtk_reserved2"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // _gtk_reserved2
							, "_gtk_reserved1"
							, "_gtk_reserved3"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("_gtk_reserved3"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // _gtk_reserved3
							, "_gtk_reserved2"
							, "_gtk_reserved4"
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
						new GLib.AbiField("_gtk_reserved4"
							, -1
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // _gtk_reserved4
							, "_gtk_reserved3"
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _class_abi;
			}
		}


		// End of the ABI representation.

		[DllImport("libgtk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gtk_cell_renderer_pixbuf_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gtk_cell_renderer_pixbuf_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}


		// Internal representation of the wrapped structure ABI.
		static GLib.AbiStruct _abi_info = null;
		static public new GLib.AbiStruct abi_info {
			get {
				if (_abi_info == null)
					_abi_info = new GLib.AbiStruct (new List<GLib.AbiField>{ 
						new GLib.AbiField("priv"
							, Gtk.CellRenderer.abi_info.Fields
							, (uint) Marshal.SizeOf(typeof(IntPtr)) // priv
							, null
							, null
							, (uint) Marshal.SizeOf(typeof(IntPtr))
							, 0
							),
					});

				return _abi_info;
			}
		}


		// End of the ABI representation.

#endregion
	}
}
