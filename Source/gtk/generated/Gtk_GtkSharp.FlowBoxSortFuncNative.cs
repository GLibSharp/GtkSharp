// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GtkSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate int FlowBoxSortFuncNative(IntPtr child1, IntPtr child2, IntPtr user_data);

	internal class FlowBoxSortFuncInvoker {

		FlowBoxSortFuncNative native_cb;
		IntPtr __data;
		GLib.DestroyNotify __notify;

		~FlowBoxSortFuncInvoker ()
		{
			if (__notify == null)
				return;
			__notify (__data);
		}

		internal FlowBoxSortFuncInvoker (FlowBoxSortFuncNative native_cb) : this (native_cb, IntPtr.Zero, null) {}

		internal FlowBoxSortFuncInvoker (FlowBoxSortFuncNative native_cb, IntPtr data) : this (native_cb, data, null) {}

		internal FlowBoxSortFuncInvoker (FlowBoxSortFuncNative native_cb, IntPtr data, GLib.DestroyNotify notify)
		{
			this.native_cb = native_cb;
			__data = data;
			__notify = notify;
		}

		internal Gtk.FlowBoxSortFunc Handler {
			get {
				return new Gtk.FlowBoxSortFunc(InvokeNative);
			}
		}

		int InvokeNative (Gtk.FlowBoxChild child1, Gtk.FlowBoxChild child2)
		{
			int __result = native_cb (child1 == null ? IntPtr.Zero : child1.Handle, child2 == null ? IntPtr.Zero : child2.Handle, __data);
			return __result;
		}
	}

	internal class FlowBoxSortFuncWrapper {

		public int NativeCallback (IntPtr child1, IntPtr child2, IntPtr user_data)
		{
			try {
				int __ret = managed (GLib.Object.GetObject(child1) as Gtk.FlowBoxChild, GLib.Object.GetObject(child2) as Gtk.FlowBoxChild);
				if (release_on_call)
					gch.Free ();
				return __ret;
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: Above call does not return.
				throw e;
			}
		}

		bool release_on_call = false;
		GCHandle gch;

		public void PersistUntilCalled ()
		{
			release_on_call = true;
			gch = GCHandle.Alloc (this);
		}

		internal FlowBoxSortFuncNative NativeDelegate;
		Gtk.FlowBoxSortFunc managed;

		public FlowBoxSortFuncWrapper (Gtk.FlowBoxSortFunc managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new FlowBoxSortFuncNative (NativeCallback);
		}

		public static Gtk.FlowBoxSortFunc GetManagedDelegate (FlowBoxSortFuncNative native)
		{
			if (native == null)
				return null;
			FlowBoxSortFuncWrapper wrapper = (FlowBoxSortFuncWrapper) native.Target;
			if (wrapper == null)
				return null;
			return wrapper.managed;
		}
	}
#endregion
}
