// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;

#region Autogenerated code
	public partial interface IActionObserver : GLib.IWrapper {

		void ActionAdded(Gtk.IActionObservable observable, string action_name, GLib.VariantType parameter_type, bool enabled, GLib.Variant state);
		void ActionEnabledChanged(Gtk.IActionObservable observable, string action_name, bool enabled);
		void ActionRemoved(Gtk.IActionObservable observable, string action_name);
		void ActionStateChanged(Gtk.IActionObservable observable, string action_name, GLib.Variant state);
		void PrimaryAccelChanged(Gtk.IActionObservable observable, string action_name, string action_and_target);
	}

	[GLib.GInterface (typeof (ActionObserverAdapter))]
	public partial interface IActionObserverImplementor : GLib.IWrapper {

		void ActionAdded (Gtk.IActionObservable observable, string action_name, GLib.VariantType parameter_type, bool enabled, GLib.Variant state);
		void ActionEnabledChanged (Gtk.IActionObservable observable, string action_name, bool enabled);
		void ActionStateChanged (Gtk.IActionObservable observable, string action_name, GLib.Variant state);
		void ActionRemoved (Gtk.IActionObservable observable, string action_name);
		void PrimaryAccelChanged (Gtk.IActionObservable observable, string action_name, string action_and_target);
	}
#endregion
}
