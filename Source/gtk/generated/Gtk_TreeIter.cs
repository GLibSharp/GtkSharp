// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct TreeIter : IEquatable<TreeIter> {

		public int Stamp;
		private IntPtr _user_data;
		private IntPtr _user_data2;
		private IntPtr _user_data3;

		public static Gtk.TreeIter Zero = new Gtk.TreeIter ();

		public static Gtk.TreeIter New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gtk.TreeIter.Zero;
			return (Gtk.TreeIter) Marshal.PtrToStructure (raw, typeof (Gtk.TreeIter));
		}

		[DllImport("libgtk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gtk_tree_iter_get_type();

		public static GLib.GType GType { 
			get {
				IntPtr raw_ret = gtk_tree_iter_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		public bool Equals (TreeIter other)
		{
			return true && Stamp.Equals (other.Stamp) && _user_data.Equals (other._user_data) && _user_data2.Equals (other._user_data2) && _user_data3.Equals (other._user_data3);
		}

		public override bool Equals (object other)
		{
			return other is TreeIter && Equals ((TreeIter) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Stamp.GetHashCode () ^ _user_data.GetHashCode () ^ _user_data2.GetHashCode () ^ _user_data3.GetHashCode ();
		}

		public static explicit operator GLib.Value (Gtk.TreeIter boxed)
		{
			GLib.Value val = GLib.Value.Empty;
			val.Init (Gtk.TreeIter.GType);
			val.Val = boxed;
			return val;
		}

		public static explicit operator Gtk.TreeIter (GLib.Value val)
		{
			return (Gtk.TreeIter) val.Val;
		}

		[Obsolete("This is a no-op")]
		public Gtk.TreeIter Copy() {
			return this;
		}
#endregion
	}
}
