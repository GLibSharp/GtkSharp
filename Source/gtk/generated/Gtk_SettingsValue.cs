// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SettingsValue : IEquatable<SettingsValue> {

		public string Origin;
		public GLib.Value Value;

		public static Gtk.SettingsValue Zero = new Gtk.SettingsValue ();

		public static Gtk.SettingsValue New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gtk.SettingsValue.Zero;
			return (Gtk.SettingsValue) Marshal.PtrToStructure (raw, typeof (Gtk.SettingsValue));
		}

		public bool Equals (SettingsValue other)
		{
			return true && Origin.Equals (other.Origin) && Value.Equals (other.Value);
		}

		public override bool Equals (object other)
		{
			return other is SettingsValue && Equals ((SettingsValue) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Origin.GetHashCode () ^ Value.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
