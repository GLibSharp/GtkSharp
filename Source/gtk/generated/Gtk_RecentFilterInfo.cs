// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct RecentFilterInfo : IEquatable<RecentFilterInfo> {

		public Gtk.RecentFilterFlags Contains;
		public string Uri;
		public string DisplayName;
		public string MimeType;
		public string Applications;
		public string Groups;
		public int Age;

		public static Gtk.RecentFilterInfo Zero = new Gtk.RecentFilterInfo ();

		public static Gtk.RecentFilterInfo New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gtk.RecentFilterInfo.Zero;
			return (Gtk.RecentFilterInfo) Marshal.PtrToStructure (raw, typeof (Gtk.RecentFilterInfo));
		}

		public bool Equals (RecentFilterInfo other)
		{
			return true && Contains.Equals (other.Contains) && Uri.Equals (other.Uri) && DisplayName.Equals (other.DisplayName) && MimeType.Equals (other.MimeType) && Applications.Equals (other.Applications) && Groups.Equals (other.Groups) && Age.Equals (other.Age);
		}

		public override bool Equals (object other)
		{
			return other is RecentFilterInfo && Equals ((RecentFilterInfo) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Contains.GetHashCode () ^ Uri.GetHashCode () ^ DisplayName.GetHashCode () ^ MimeType.GetHashCode () ^ Applications.GetHashCode () ^ Groups.GetHashCode () ^ Age.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
