// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Pango {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class FontFamily : GLib.Object {

		public FontFamily (IntPtr raw) : base(raw) {}

		protected FontFamily() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[DllImport("libpango-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr pango_font_family_get_name(IntPtr raw);

		public string Name { 
			get {
				IntPtr raw_ret = pango_font_family_get_name(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[DllImport("libpango-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr pango_font_family_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = pango_font_family_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("libpango-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern bool pango_font_family_is_monospace(IntPtr raw);

		public bool IsMonospace { 
			get {
				bool raw_ret = pango_font_family_is_monospace(Handle);
				bool ret = raw_ret;
				return ret;
			}
		}

#endregion
	}
}
