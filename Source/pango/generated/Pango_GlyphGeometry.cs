// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Pango {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct GlyphGeometry : IEquatable<GlyphGeometry> {

		public int Width;
		public int XOffset;
		public int YOffset;

		public static Pango.GlyphGeometry Zero = new Pango.GlyphGeometry ();

		public static Pango.GlyphGeometry New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Pango.GlyphGeometry.Zero;
			return (Pango.GlyphGeometry) Marshal.PtrToStructure (raw, typeof (Pango.GlyphGeometry));
		}

		public bool Equals (GlyphGeometry other)
		{
			return true && Width.Equals (other.Width) && XOffset.Equals (other.XOffset) && YOffset.Equals (other.YOffset);
		}

		public override bool Equals (object other)
		{
			return other is GlyphGeometry && Equals ((GlyphGeometry) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Width.GetHashCode () ^ XOffset.GetHashCode () ^ YOffset.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
