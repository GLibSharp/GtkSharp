// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Pango {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct GlyphInfo : IEquatable<GlyphInfo> {

		public uint Glyph;
		public Pango.GlyphGeometry Geometry;
		public Pango.GlyphVisAttr Attr;

		public static Pango.GlyphInfo Zero = new Pango.GlyphInfo ();

		public static Pango.GlyphInfo New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Pango.GlyphInfo.Zero;
			return (Pango.GlyphInfo) Marshal.PtrToStructure (raw, typeof (Pango.GlyphInfo));
		}

		public bool Equals (GlyphInfo other)
		{
			return true && Glyph.Equals (other.Glyph) && Geometry.Equals (other.Geometry) && Attr.Equals (other.Attr);
		}

		public override bool Equals (object other)
		{
			return other is GlyphInfo && Equals ((GlyphInfo) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Glyph.GetHashCode () ^ Geometry.GetHashCode () ^ Attr.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
