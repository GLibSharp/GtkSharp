// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GdkSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate bool PixbufSaveFuncNative(IntPtr buf, UIntPtr count, out IntPtr error, IntPtr data);

	internal class PixbufSaveFuncInvoker {

		PixbufSaveFuncNative native_cb;
		IntPtr __data;
		GLib.DestroyNotify __notify;

		~PixbufSaveFuncInvoker ()
		{
			if (__notify == null)
				return;
			__notify (__data);
		}

		internal PixbufSaveFuncInvoker (PixbufSaveFuncNative native_cb) : this (native_cb, IntPtr.Zero, null) {}

		internal PixbufSaveFuncInvoker (PixbufSaveFuncNative native_cb, IntPtr data) : this (native_cb, data, null) {}

		internal PixbufSaveFuncInvoker (PixbufSaveFuncNative native_cb, IntPtr data, GLib.DestroyNotify notify)
		{
			this.native_cb = native_cb;
			__data = data;
			__notify = notify;
		}

		internal Gdk.PixbufSaveFunc Handler {
			get {
				return new Gdk.PixbufSaveFunc(InvokeNative);
			}
		}

		bool InvokeNative (string buf, ulong count)
		{
			IntPtr native_buf = GLib.Marshaller.StringToPtrGStrdup (buf);
			IntPtr error = IntPtr.Zero;
			bool __result = native_cb (native_buf, new UIntPtr (count), out error, __data);
			GLib.Marshaller.Free (native_buf);
			return __result;
		}
	}

	internal class PixbufSaveFuncWrapper {

		public bool NativeCallback (IntPtr buf, UIntPtr count, out IntPtr error, IntPtr data)
		{
			error = IntPtr.Zero;

			try {
				bool __ret = managed (GLib.Marshaller.Utf8PtrToString (buf), (ulong) count);
				if (release_on_call)
					gch.Free ();
				return __ret;
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
				return false;
			}
		}

		bool release_on_call = false;
		GCHandle gch;

		public void PersistUntilCalled ()
		{
			release_on_call = true;
			gch = GCHandle.Alloc (this);
		}

		internal PixbufSaveFuncNative NativeDelegate;
		Gdk.PixbufSaveFunc managed;

		public PixbufSaveFuncWrapper (Gdk.PixbufSaveFunc managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new PixbufSaveFuncNative (NativeCallback);
		}

		public static Gdk.PixbufSaveFunc GetManagedDelegate (PixbufSaveFuncNative native)
		{
			if (native == null)
				return null;
			PixbufSaveFuncWrapper wrapper = (PixbufSaveFuncWrapper) native.Target;
			if (wrapper == null)
				return null;
			return wrapper.managed;
		}
	}
#endregion
}
