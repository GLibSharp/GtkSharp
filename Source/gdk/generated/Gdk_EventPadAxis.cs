// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gdk {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct EventPadAxis : IEquatable<EventPadAxis> {

		public Gdk.EventType Type;
		private IntPtr _window;
		public Gdk.Window Window {
			get {
				return GLib.Object.GetObject(_window) as Gdk.Window;
			}
			set {
				_window = value == null ? IntPtr.Zero : value.Handle;
			}
		}
		public sbyte SendEvent;
		public uint Time;
		public uint Group;
		public uint Index;
		public uint Mode;
		public double Value;

		public static Gdk.EventPadAxis Zero = new Gdk.EventPadAxis ();

		public static Gdk.EventPadAxis New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gdk.EventPadAxis.Zero;
			return (Gdk.EventPadAxis) Marshal.PtrToStructure (raw, typeof (Gdk.EventPadAxis));
		}

		public bool Equals (EventPadAxis other)
		{
			return true && Type.Equals (other.Type) && Window.Equals (other.Window) && SendEvent.Equals (other.SendEvent) && Time.Equals (other.Time) && Group.Equals (other.Group) && Index.Equals (other.Index) && Mode.Equals (other.Mode) && Value.Equals (other.Value);
		}

		public override bool Equals (object other)
		{
			return other is EventPadAxis && Equals ((EventPadAxis) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Type.GetHashCode () ^ Window.GetHashCode () ^ SendEvent.GetHashCode () ^ Time.GetHashCode () ^ Group.GetHashCode () ^ Index.GetHashCode () ^ Mode.GetHashCode () ^ Value.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
