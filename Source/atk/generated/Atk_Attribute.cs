// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Atk {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct Attribute : IEquatable<Attribute> {

		public string Name;
		public string Value;

		public static Atk.Attribute Zero = new Atk.Attribute ();

		public static Atk.Attribute New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Atk.Attribute.Zero;
			return (Atk.Attribute) Marshal.PtrToStructure (raw, typeof (Atk.Attribute));
		}

		public bool Equals (Attribute other)
		{
			return true && Name.Equals (other.Name) && Value.Equals (other.Value);
		}

		public override bool Equals (object other)
		{
			return other is Attribute && Equals ((Attribute) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Name.GetHashCode () ^ Value.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
