// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Atk {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class StateManager {

		[DllImport("libatk-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern int atk_state_type_for_name(IntPtr name);

		public static Atk.StateType TypeForName(string name) {
			IntPtr native_name = GLib.Marshaller.StringToPtrGStrdup (name);
			int raw_ret = atk_state_type_for_name(native_name);
			Atk.StateType ret = (Atk.StateType) raw_ret;
			GLib.Marshaller.Free (native_name);
			return ret;
		}

		[DllImport("libatk-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr atk_state_type_get_name(int type);

		public static string TypeGetName(Atk.StateType type) {
			IntPtr raw_ret = atk_state_type_get_name((int) type);
			string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
			return ret;
		}

		[DllImport("libatk-1.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern int atk_state_type_register(IntPtr name);

		public static Atk.StateType TypeRegister(string name) {
			IntPtr native_name = GLib.Marshaller.StringToPtrGStrdup (name);
			int raw_ret = atk_state_type_register(native_name);
			Atk.StateType ret = (Atk.StateType) raw_ret;
			GLib.Marshaller.Free (native_name);
			return ret;
		}

#endregion
	}
}
