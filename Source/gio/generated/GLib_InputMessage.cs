// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GLib {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct InputMessage : IEquatable<InputMessage> {

		private IntPtr _address;
		public GLib.SocketAddress Address {
			get {
				return GLib.Object.GetObject(_address) as GLib.SocketAddress;
			}
			set {
				_address = value == null ? IntPtr.Zero : value.Handle;
			}
		}
		private IntPtr _vectors;

		public GLib.InputVector vectors {
			get { return GLib.InputVector.New (_vectors); }
		}
		public uint NumVectors;
		private UIntPtr bytes_received;
		public ulong BytesReceived {
			get {
				return (ulong) bytes_received;
			}
			set {
				bytes_received = new UIntPtr (value);
			}
		}
		public int Flags;
		private IntPtr _control_messages;
		public GLib.SocketControlMessage ControlMessages {
			get {
				return GLib.Object.GetObject(_control_messages) as GLib.SocketControlMessage;
			}
			set {
				_control_messages = value == null ? IntPtr.Zero : value.Handle;
			}
		}
		private IntPtr _num_control_messages;

		public static GLib.InputMessage Zero = new GLib.InputMessage ();

		public static GLib.InputMessage New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return GLib.InputMessage.Zero;
			return (GLib.InputMessage) Marshal.PtrToStructure (raw, typeof (GLib.InputMessage));
		}

		public bool Equals (InputMessage other)
		{
			return true && Address.Equals (other.Address) && vectors.Equals (other.vectors) && NumVectors.Equals (other.NumVectors) && BytesReceived.Equals (other.BytesReceived) && Flags.Equals (other.Flags) && ControlMessages.Equals (other.ControlMessages) && _num_control_messages.Equals (other._num_control_messages);
		}

		public override bool Equals (object other)
		{
			return other is InputMessage && Equals ((InputMessage) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Address.GetHashCode () ^ vectors.GetHashCode () ^ NumVectors.GetHashCode () ^ BytesReceived.GetHashCode () ^ Flags.GetHashCode () ^ ControlMessages.GetHashCode () ^ _num_control_messages.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
