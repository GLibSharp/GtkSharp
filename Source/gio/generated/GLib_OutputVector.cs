// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GLib {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct OutputVector : IEquatable<OutputVector> {

		private IntPtr _buffer;
		private UIntPtr size;
		public ulong Size {
			get {
				return (ulong) size;
			}
			set {
				size = new UIntPtr (value);
			}
		}

		public static GLib.OutputVector Zero = new GLib.OutputVector ();

		public static GLib.OutputVector New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return GLib.OutputVector.Zero;
			return (GLib.OutputVector) Marshal.PtrToStructure (raw, typeof (GLib.OutputVector));
		}

		public bool Equals (OutputVector other)
		{
			return true && _buffer.Equals (other._buffer) && Size.Equals (other.Size);
		}

		public override bool Equals (object other)
		{
			return other is OutputVector && Equals ((OutputVector) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ _buffer.GetHashCode () ^ Size.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
