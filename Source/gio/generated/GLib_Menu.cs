// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GLib {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class Menu : GLib.MenuModel {

		public Menu (IntPtr raw) : base(raw) {}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr g_menu_new();

		public Menu () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (Menu)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			Raw = g_menu_new();
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_menu_append(IntPtr raw, IntPtr label, IntPtr detailed_action);

		public void Append(string label, string detailed_action) {
			IntPtr native_label = GLib.Marshaller.StringToPtrGStrdup (label);
			IntPtr native_detailed_action = GLib.Marshaller.StringToPtrGStrdup (detailed_action);
			g_menu_append(Handle, native_label, native_detailed_action);
			GLib.Marshaller.Free (native_label);
			GLib.Marshaller.Free (native_detailed_action);
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_menu_append_item(IntPtr raw, IntPtr item);

		public void AppendItem(GLib.MenuItem item) {
			g_menu_append_item(Handle, item == null ? IntPtr.Zero : item.Handle);
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_menu_append_section(IntPtr raw, IntPtr label, IntPtr section);

		public void AppendSection(string label, GLib.MenuModel section) {
			IntPtr native_label = GLib.Marshaller.StringToPtrGStrdup (label);
			g_menu_append_section(Handle, native_label, section == null ? IntPtr.Zero : section.Handle);
			GLib.Marshaller.Free (native_label);
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_menu_append_submenu(IntPtr raw, IntPtr label, IntPtr submenu);

		public void AppendSubmenu(string label, GLib.MenuModel submenu) {
			IntPtr native_label = GLib.Marshaller.StringToPtrGStrdup (label);
			g_menu_append_submenu(Handle, native_label, submenu == null ? IntPtr.Zero : submenu.Handle);
			GLib.Marshaller.Free (native_label);
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_menu_freeze(IntPtr raw);

		public void Freeze() {
			g_menu_freeze(Handle);
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr g_menu_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = g_menu_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_menu_insert(IntPtr raw, int position, IntPtr label, IntPtr detailed_action);

		public void Insert(int position, string label, string detailed_action) {
			IntPtr native_label = GLib.Marshaller.StringToPtrGStrdup (label);
			IntPtr native_detailed_action = GLib.Marshaller.StringToPtrGStrdup (detailed_action);
			g_menu_insert(Handle, position, native_label, native_detailed_action);
			GLib.Marshaller.Free (native_label);
			GLib.Marshaller.Free (native_detailed_action);
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_menu_insert_item(IntPtr raw, int position, IntPtr item);

		public void InsertItem(int position, GLib.MenuItem item) {
			g_menu_insert_item(Handle, position, item == null ? IntPtr.Zero : item.Handle);
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_menu_insert_section(IntPtr raw, int position, IntPtr label, IntPtr section);

		public void InsertSection(int position, string label, GLib.MenuModel section) {
			IntPtr native_label = GLib.Marshaller.StringToPtrGStrdup (label);
			g_menu_insert_section(Handle, position, native_label, section == null ? IntPtr.Zero : section.Handle);
			GLib.Marshaller.Free (native_label);
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_menu_insert_submenu(IntPtr raw, int position, IntPtr label, IntPtr submenu);

		public void InsertSubmenu(int position, string label, GLib.MenuModel submenu) {
			IntPtr native_label = GLib.Marshaller.StringToPtrGStrdup (label);
			g_menu_insert_submenu(Handle, position, native_label, submenu == null ? IntPtr.Zero : submenu.Handle);
			GLib.Marshaller.Free (native_label);
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_menu_prepend(IntPtr raw, IntPtr label, IntPtr detailed_action);

		public void Prepend(string label, string detailed_action) {
			IntPtr native_label = GLib.Marshaller.StringToPtrGStrdup (label);
			IntPtr native_detailed_action = GLib.Marshaller.StringToPtrGStrdup (detailed_action);
			g_menu_prepend(Handle, native_label, native_detailed_action);
			GLib.Marshaller.Free (native_label);
			GLib.Marshaller.Free (native_detailed_action);
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_menu_prepend_item(IntPtr raw, IntPtr item);

		public void PrependItem(GLib.MenuItem item) {
			g_menu_prepend_item(Handle, item == null ? IntPtr.Zero : item.Handle);
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_menu_prepend_section(IntPtr raw, IntPtr label, IntPtr section);

		public void PrependSection(string label, GLib.MenuModel section) {
			IntPtr native_label = GLib.Marshaller.StringToPtrGStrdup (label);
			g_menu_prepend_section(Handle, native_label, section == null ? IntPtr.Zero : section.Handle);
			GLib.Marshaller.Free (native_label);
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_menu_prepend_submenu(IntPtr raw, IntPtr label, IntPtr submenu);

		public void PrependSubmenu(string label, GLib.MenuModel submenu) {
			IntPtr native_label = GLib.Marshaller.StringToPtrGStrdup (label);
			g_menu_prepend_submenu(Handle, native_label, submenu == null ? IntPtr.Zero : submenu.Handle);
			GLib.Marshaller.Free (native_label);
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_menu_remove(IntPtr raw, int position);

		public void Remove(int position) {
			g_menu_remove(Handle, position);
		}

		[DllImport("gio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_menu_remove_all(IntPtr raw);

		public void RemoveAll() {
			g_menu_remove_all(Handle);
		}

#endregion
	}
}
