// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GLib {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ActionEntry : IEquatable<ActionEntry> {

		public string Name;
		public string ParameterType;
		public string State;
		[MarshalAs (UnmanagedType.ByValArray, SizeConst=3)]
		private ulong[] Padding;

		public static GLib.ActionEntry Zero = new GLib.ActionEntry ();

		public static GLib.ActionEntry New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return GLib.ActionEntry.Zero;
			return (GLib.ActionEntry) Marshal.PtrToStructure (raw, typeof (GLib.ActionEntry));
		}

		public bool Equals (ActionEntry other)
		{
			return true && Name.Equals (other.Name) && ParameterType.Equals (other.ParameterType) && State.Equals (other.State);
		}

		public override bool Equals (object other)
		{
			return other is ActionEntry && Equals ((ActionEntry) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Name.GetHashCode () ^ ParameterType.GetHashCode () ^ State.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
